#!/bin/sh
#
# 50_setup-tlscert-acme
#
#
#

#
# Config
#
source docker-common.sh

ACME_FILE=${ACME_FILE-/acme/acme.json}
HOSTNAME=${HOSTNAME-$(hostname)}
DOCKER_ACME_SSL_DIR=${DOCKER_ACME_SSL_DIR-/etc/ssl/acme}
DOCKER_AST_SSL_DIR=${DOCKER_AST_SSL_DIR-/etc/ssl/asterisk}

#
# Make sure that we have the required directory structure in place under
# DOCKER_PERSIST_DIR. It will be missing if we mount an empty volume there.
#

fix_persist_dirs() {
	mkdir -p ${DOCKER_PERSIST_DIR}${DOCKER_AST_SSL_DIR} \
		${DOCKER_PERSIST_DIR}${DOCKER_ACME_SSL_DIR}
}

setup_runit_acme_dump() {
	if (dc_is_installed jq && [ -s $ACME_FILE ]); then
		dc_log 5 "Setup ACME TLS certificate monitoring"
		setup-runit.sh "-n acme $(which inotifyd) $(which dumpcerts.sh) $ACME_FILE:c"
		# run dumpcerts.sh on cnt creation (and every time the json file changes)
		# dumpcerts.sh reports to logger but it is yet to be started so this run will be quiet
		dumpcerts.sh $ACME_FILE $DOCKER_ACME_SSL_DIR
	fi
}

setup_acme_tls_cert() {
	local cert=$DOCKER_AST_SSL_DIR/asterisk.cert.pem
	local key=$DOCKER_AST_SSL_DIR/asterisk.priv_key.pem
	if ([ -s $ACME_FILE ] && ([ ! -s $cert ] || [ ! -s $key ])); then
		dc_log 5 "Setup ACME TLS certificate for host $HOSTNAME"
		ln -sf $DOCKER_ACME_SSL_DIR/certs/${HOSTNAME}.crt $cert
		ln -sf $DOCKER_ACME_SSL_DIR/private/${HOSTNAME}.key $key
	fi
}

#
# Run
#

fix_persist_dirs
setup_runit_acme_dump
setup_acme_tls_cert
